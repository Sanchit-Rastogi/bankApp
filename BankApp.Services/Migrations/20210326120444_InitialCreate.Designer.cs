// <auto-generated />
using System;
using BankApp.Services.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BankApp.Services.Migrations
{
    [DbContext(typeof(BankDBContext))]
    [Migration("20210326120444_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BankApp.Models.AccountHolder", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AccountHolders");
                });

            modelBuilder.Entity("BankApp.Models.BankModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("BankChargesId")
                        .HasColumnType("int");

                    b.Property<string>("DefaultCurrency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BankChargesId");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("BankApp.Models.Charges", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DifferentBankIMPSCharge")
                        .HasColumnType("int");

                    b.Property<int>("DifferentBankRTGSCharge")
                        .HasColumnType("int");

                    b.Property<int>("SameBankIMPSCharge")
                        .HasColumnType("int");

                    b.Property<int>("SameBankRTGSCharge")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Charges");
                });

            modelBuilder.Entity("BankApp.Models.Employee", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("BankApp.Models.BankModel", b =>
                {
                    b.HasOne("BankApp.Models.Charges", "BankCharges")
                        .WithMany()
                        .HasForeignKey("BankChargesId");

                    b.Navigation("BankCharges");
                });
#pragma warning restore 612, 618
        }
    }
}
